/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.jsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/openstad-component/src/index.jsx":
/*!*******************************************************!*\
  !*** ./node_modules/openstad-component/src/index.jsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponent; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n'use strict';\n\nvar OpenStadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OpenStadComponent, _React$Component);\n\n  function OpenStadComponent(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponent).call(this, props));\n\n    var self = _assertThisInitialized(_this);\n\n    if (props.attributes) {\n      Object.keys(props.attributes).forEach(function (key) {\n        var attribute = props.attributes[key];\n        self[attribute.name] = attribute.value;\n      });\n    }\n\n    self.config = self.config || props.config;\n\n    if (self.config) {\n      try {\n        self.config = JSON.parse(self.config);\n      } catch (err) {}\n    }\n\n    self.divId = self.divId || self.config && self.config.divId || props.id || \"openstad-component-\".concat(parseInt(100000000 * Math.random()));\n    window[self.divId] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(OpenStadComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      var event = new Event('isReady');\n      self.isReady = true;\n      self.instance.dispatchEvent(event);\n    }\n  }]);\n\n  return OpenStadComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb3BlbnN0YWQtY29tcG9uZW50L3NyYy9pbmRleC5qc3g/YWVkNyJdLCJuYW1lcyI6WyJPcGVuU3RhZENvbXBvbmVudCIsInByb3BzIiwic2VsZiIsImF0dHJpYnV0ZXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImF0dHJpYnV0ZSIsIm5hbWUiLCJ2YWx1ZSIsImNvbmZpZyIsIkpTT04iLCJwYXJzZSIsImVyciIsImRpdklkIiwiaWQiLCJwYXJzZUludCIsIk1hdGgiLCJyYW5kb20iLCJ3aW5kb3ciLCJwcmV2UHJvcHMiLCJwcmV2U3RhdGUiLCJldmVudCIsIkV2ZW50IiwiaXNSZWFkeSIsImluc3RhbmNlIiwiZGlzcGF0Y2hFdmVudCIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTs7SUFFcUJBLGlCOzs7OztBQUVuQiw2QkFBWUMsS0FBWixFQUFtQjtBQUFBOztBQUFBOztBQUVqQiwyRkFBTUEsS0FBTjs7QUFFQSxRQUFJQyxJQUFJLGdDQUFSOztBQUVBLFFBQUlELEtBQUssQ0FBQ0UsVUFBVixFQUFzQjtBQUNwQkMsWUFBTSxDQUFDQyxJQUFQLENBQVlKLEtBQUssQ0FBQ0UsVUFBbEIsRUFBOEJHLE9BQTlCLENBQXNDLFVBQUNDLEdBQUQsRUFBUztBQUM3QyxZQUFJQyxTQUFTLEdBQUdQLEtBQUssQ0FBQ0UsVUFBTixDQUFpQkksR0FBakIsQ0FBaEI7QUFDQUwsWUFBSSxDQUFDTSxTQUFTLENBQUNDLElBQVgsQ0FBSixHQUF1QkQsU0FBUyxDQUFDRSxLQUFqQztBQUNELE9BSEQ7QUFJRDs7QUFFRFIsUUFBSSxDQUFDUyxNQUFMLEdBQWNULElBQUksQ0FBQ1MsTUFBTCxJQUFlVixLQUFLLENBQUNVLE1BQW5DOztBQUVBLFFBQUlULElBQUksQ0FBQ1MsTUFBVCxFQUFpQjtBQUNmLFVBQUk7QUFDRlQsWUFBSSxDQUFDUyxNQUFMLEdBQWNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXWCxJQUFJLENBQUNTLE1BQWhCLENBQWQ7QUFDRCxPQUZELENBRUUsT0FBT0csR0FBUCxFQUFZLENBQUU7QUFDakI7O0FBRURaLFFBQUksQ0FBQ2EsS0FBTCxHQUFhYixJQUFJLENBQUNhLEtBQUwsSUFBZ0JiLElBQUksQ0FBQ1MsTUFBTCxJQUFlVCxJQUFJLENBQUNTLE1BQUwsQ0FBWUksS0FBM0MsSUFBc0RkLEtBQUssQ0FBQ2UsRUFBNUQsaUNBQTBGQyxRQUFRLENBQUUsWUFBWUMsSUFBSSxDQUFDQyxNQUFMLEVBQWQsQ0FBbEcsQ0FBYjtBQUVBQyxVQUFNLENBQUNsQixJQUFJLENBQUNhLEtBQU4sQ0FBTjtBQXZCaUI7QUF5QmxCOzs7O3NDQUVpQk0sUyxFQUFXQyxTLEVBQVc7QUFDdEMsVUFBSUMsS0FBSyxHQUFHLElBQUlDLEtBQUosQ0FBVSxTQUFWLENBQVo7QUFDQXRCLFVBQUksQ0FBQ3VCLE9BQUwsR0FBZSxJQUFmO0FBQ0F2QixVQUFJLENBQUN3QixRQUFMLENBQWNDLGFBQWQsQ0FBNEJKLEtBQTVCO0FBQ0Q7Ozs7RUFqQzRDSyw0Q0FBSyxDQUFDQyxTIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL29wZW5zdGFkLWNvbXBvbmVudC9zcmMvaW5kZXguanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcGVuU3RhZENvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcblxuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIGxldCBzZWxmID0gdGhpcztcblxuICAgIGlmIChwcm9wcy5hdHRyaWJ1dGVzKSB7XG4gICAgICBPYmplY3Qua2V5cyhwcm9wcy5hdHRyaWJ1dGVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgbGV0IGF0dHJpYnV0ZSA9IHByb3BzLmF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgc2VsZlthdHRyaWJ1dGUubmFtZV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZWxmLmNvbmZpZyA9IHNlbGYuY29uZmlnIHx8IHByb3BzLmNvbmZpZztcblxuICAgIGlmIChzZWxmLmNvbmZpZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2VsZi5jb25maWcgPSBKU09OLnBhcnNlKHNlbGYuY29uZmlnKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICB9XG5cbiAgICBzZWxmLmRpdklkID0gc2VsZi5kaXZJZCB8fCAoIHNlbGYuY29uZmlnICYmIHNlbGYuY29uZmlnLmRpdklkICkgfHwgcHJvcHMuaWQgfHwgYG9wZW5zdGFkLWNvbXBvbmVudC0keyAgcGFyc2VJbnQoIDEwMDAwMDAwMCAqIE1hdGgucmFuZG9tKCkgKX1gO1xuICAgIFxuICAgIHdpbmRvd1tzZWxmLmRpdklkXSA9IHRoaXM7XG5cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KHByZXZQcm9wcywgcHJldlN0YXRlKSB7XG4gICAgbGV0IGV2ZW50ID0gbmV3IEV2ZW50KCdpc1JlYWR5Jyk7XG4gICAgc2VsZi5pc1JlYWR5ID0gdHJ1ZTtcbiAgICBzZWxmLmluc3RhbmNlLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/openstad-component/src/index.jsx\n");

/***/ }),

/***/ "./src/component/map.jsx":
/*!*******************************!*\
  !*** ./src/component/map.jsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return OpenStadComponentNLMap; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openstad-component/src/index.jsx */ \"./node_modules/openstad-component/src/index.jsx\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n'use strict';\n\nvar OpenStadComponentNLMap =\n/*#__PURE__*/\nfunction (_OpenStadComponent) {\n  _inherits(OpenStadComponentNLMap, _OpenStadComponent);\n\n  function OpenStadComponentNLMap(props) {\n    var _this;\n\n    _classCallCheck(this, OpenStadComponentNLMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpenStadComponentNLMap).call(this, props));\n\n    var self = _assertThisInitialized(_this); // config\n\n\n    var defaultConfig = {\n      target: self.divId,\n      style: 'standaard',\n      marker: false,\n      search: false,\n      center: {\n        latitude: 52.37104644463586,\n        longitude: 4.900402911007405\n      },\n      zoom: 14,\n      zoomposition: 'bottomleft',\n      disableDefaultUI: true,\n      polygon: null,\n      autoZoomAndCenter: false // onQueryResult: self.onQueryHandler\n\n    };\n    self.config = Object.assign(defaultConfig, self.config || {}); // external css and script files\n\n    self._loadedFiles = 0;\n    self.files = [{\n      type: 'css',\n      href: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.css\"\n    }, {\n      type: 'script',\n      src: \"https://unpkg.com/leaflet@1.0.3/dist/leaflet.js\"\n    }];\n\n    switch (self.config.variant) {\n      case \"amaps\":\n        // self.files.push({ type: 'css', href: \"https://map.data.amsterdam.nl/dist/css/ams-map.css\"}); // in tegenstelling tot wat ze beloven overschrijft dit ook css buiten de map\n        self.files.push({\n          type: 'script',\n          src: \"https://map.data.amsterdam.nl/dist/amaps.iife.js\"\n        });\n        break;\n\n      default:\n        self.files.push({\n          type: 'css',\n          href: \"https://nlmaps.nl/dist/assets/css/nlmaps.css\"\n        });\n        self.files.push({\n          type: 'script',\n          src: \"https://nlmaps.nl/dist/nlmaps.iife.js\"\n        });\n    }\n\n    self.files.push({\n      type: 'css',\n      href: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\"\n    });\n    self.files.push({\n      type: 'script',\n      src: \"https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js\"\n    });\n    self.markers = self.config.markers || [];\n    return _this;\n  }\n\n  _createClass(OpenStadComponentNLMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(prevProps, prevState) {\n      this.loadNextFile();\n    }\n  }, {\n    key: \"loadNextFile\",\n    value: function loadNextFile() {\n      var self = this;\n      var file = self.files[self._loadedFiles];\n\n      if (file) {\n        var element;\n\n        if (file.type === 'script') {\n          element = document.createElement('script');\n          element.src = file.src;\n          element.async = true;\n        }\n\n        if (file.type === 'css') {\n          element = document.createElement('link');\n          element.href = file.href;\n          element.rel = 'stylesheet';\n        }\n\n        if (element) {\n          element.onload = function () {\n            self.loadNextFile();\n          };\n\n          this.instance.appendChild(element);\n        }\n      }\n\n      if (self._loadedFiles == self.files.length) {\n        // loading script files is ready; create the map\n        self.createMap(); // dispatch an event\n\n        var event = new Event('mapIsReady');\n        self.mapIsReady = true;\n        self.instance.dispatchEvent(event);\n      }\n\n      self._loadedFiles++;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var self = this; // init map\n\n      switch (self.config.variant) {\n        case \"amaps\":\n          self.map = amaps.createMap(self.config);\n          break;\n\n        default:\n          self.map = nlmaps.createMap(self.config);\n      } // clustering\n\n\n      if (self.config.clustering && self.config.clustering.isActive && L.markerClusterGroup) {\n        var iconCreateFunction = self.config.clustering.iconCreateFunction || self.createClusterIcon;\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') iconCreateFunction = eval(iconCreateFunction);\n        self.markerClusterGroup = L.markerClusterGroup({\n          iconCreateFunction: iconCreateFunction,\n          showCoverageOnHover: self.config.clustering.showCoverageOnHover,\n          maxClusterRadius: self.config.clustering.maxClusterRadius || 80\n        });\n        var onClusterClick = self.config.clustering.onClusterClick || self.onClusterClick;\n        if (typeof onClusterClick == 'string') onClusterClick = eval(onClusterClick);\n        self.markerClusterGroup.on('clusterclick', onClusterClick);\n        var onClusterAnimationEnd = self.config.clustering.onClusterAnimationEnd || self.onClusterAnimationEnd;\n        if (typeof onClusterAnimationEnd == 'string') onClusterAnimationEnd = eval(onClusterAnimationEnd);\n        self.markerClusterGroup.on('animationend', onClusterAnimationEnd);\n        self.map.addLayer(self.markerClusterGroup);\n      } // on map click\n\n\n      if (self.config.onMapClick) {\n        if (typeof self.config.onMapClick == 'string') self.config.onMapClick = eval(self.config.onMapClick);\n      }\n\n      self.map.on('click', self.config.onMapClick || self.onMapClick); // add polygon\n\n      if (self.config.polygon) {\n        self.createCutoutPolygon(self.config.polygon);\n      } // add markers\n\n\n      if (self.markers.length) {\n        self.markers.forEach(function (marker) {\n          self.addMarker(marker);\n        });\n      } // set bounds and center\n\n\n      if (self.config.autoZoomAndCenter) {\n        var centerOn = self.config.autoZoomAndCenter == 'polygon' && self.config.polygon || self.markers && self.markers.length && self.markers;\n\n        if (self.editorMarker) {\n          if (self.editorMarker.position) {\n            centerOn = [self.editorMarker];\n          } else {\n            centerOn = self.config.polygon;\n          }\n        }\n\n        if (centerOn) {\n          self.setBoundsAndCenter(centerOn);\n        }\n      }\n    }\n  }, {\n    key: \"addMarkers\",\n    value: function addMarkers(markerData) {\n      var self = this;\n      markerData.forEach(function (marker) {\n        self.addMarker(marker);\n      });\n    }\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(markerData) {\n      var self = this;\n      var icon = markerData.icon;\n\n      if (!icon) {\n        var iconCreateFunction = self.config.iconCreateFunction;\n\n        if (iconCreateFunction && typeof iconCreateFunction == 'string') {\n          iconCreateFunction = eval(iconCreateFunction);\n          icon = iconCreateFunction();\n        }\n      }\n\n      var marker;\n\n      if (icon) {\n        marker = L.marker([markerData.lat, markerData.lng], {\n          icon: icon\n        });\n      } else {\n        marker = L.marker([markerData.lat, markerData.lng]);\n      }\n\n      marker.visible = true;\n      marker.data = markerData.data;\n      marker.doNotCluster = markerData.doNotCluster;\n\n      if (markerData.href) {\n        markerData.onClick = function () {\n          document.location.href = markerData.href;\n        };\n      }\n\n      var onClick = markerData.onClick != null && markerData.onClick || self.config.onMarkerClick || self.onMarkerClick;\n\n      if (onClick) {\n        if (typeof onClick == 'string') onClick = eval(onClick);\n        marker.on('click', onClick);\n      }\n\n      if (self.markerClusterGroup && !markerData.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        self.map.addLayer(marker);\n      }\n\n      self.markers.push(marker);\n      return marker;\n    }\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(marker) {\n      var index = this.markers.indexOf(marker);\n      if (index > -1) this.markers.splice(index, 1);\n      this.map.removeLayer(marker);\n    }\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(marker, newData) {\n      if (newData.location) {\n        var newLatLng = new L.LatLng(newData.location.lat, newData.location.lng);\n        marker.setLatLng(newLatLng);\n      }\n    }\n  }, {\n    key: \"createClusterIcon\",\n    value: function createClusterIcon(cluster) {\n      var count = cluster.getChildCount();\n      return L.divIcon({\n        html: count,\n        className: 'openstad-component-nlmap-icon-cluster',\n        iconSize: L.point(20, 20),\n        iconAnchor: [20, 10]\n      });\n    }\n  }, {\n    key: \"createCutoutPolygon\",\n    value: function createCutoutPolygon(polygon) {\n      var self = this; // polygon must defined from the south west corner to work with the outer box\n\n      var bounds = L.polygon(polygon).getBounds();\n      var center = bounds.getCenter();\n      var smallest = 0;\n      var index = 0;\n      polygon.forEach(function (point, i) {\n        var y = Math.sin(point.lng - center.lng) * Math.cos(point.lat);\n        var x = Math.cos(center.lat) * Math.sin(point.lat) - Math.sin(center.lat) * Math.cos(point.lat) * Math.cos(point.lng - center.lng);\n        var bearing = Math.atan2(y, x) * 180 / Math.PI;\n\n        if (45 - bearing < smallest) {\n          smallest = 45 - bearing;\n          index = i;\n        }\n      });\n      var a = polygon.slice(0, index - 1);\n      var b = polygon.slice(index, polygon.length - 1);\n      polygon = b.concat(a); // outer box\n      // TODO: should be calculated dynamically from the center point\n\n      var delta1 = 0.01;\n      var delta2 = 5;\n      var outerBox = [{\n        lat: -90 + delta2,\n        lng: -180 + delta1\n      }, {\n        lat: -90 + delta2,\n        lng: 0\n      }, {\n        lat: -90 + delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 0,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 180 - delta1\n      }, {\n        lat: 90 - delta2,\n        lng: 0\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 90 - delta2,\n        lng: -180 + delta1\n      }, {\n        lat: 0,\n        lng: -180 + delta1\n      }]; // polygon style\n\n      var polygonStyle = Object.assign({\n        \"color\": \"#d00\",\n        \"fillColor\": \"#000\",\n        \"fillOpacity\": 0.15\n      }, self.config.polygonStyle);\n      var result = L.polygon([outerBox, polygon], polygonStyle);\n      self.map.addLayer(result);\n      return result;\n    }\n  }, {\n    key: \"removePolygon\",\n    value: function removePolygon(polygon) {\n      var self = this;\n\n      if (polygon) {\n        self.map.removeLayer(polygon);\n      }\n    }\n  }, {\n    key: \"setBoundsAndCenter\",\n    value: function setBoundsAndCenter(points) {\n      var self = this;\n      points = points || [];\n      var poly = [];\n      points.forEach(function (point) {\n        if (point._latlng) {\n          point = point._latlng;\n        } else if (point.position) {\n          point = point.position.coordinates ? {\n            lat: point.position.coordinates[0],\n            lng: point.position.coordinates[1]\n          } : point.position;\n        }\n\n        poly.push(point);\n      });\n\n      if (poly.length == 1) {\n        self.map.panTo(new L.LatLng(poly[0].lat, poly[0].lng));\n      } else {\n        var bounds = L.latLngBounds(poly);\n        self.map.fitBounds(bounds);\n      } // var zoom = parseInt(self.map.getZoom())\n      // self.map.setZoom(zoom - 1)\n\n    }\n  }, {\n    key: \"showMarkers\",\n    value: function showMarkers(markers) {\n      var self = this;\n      markers.forEach(function (marker) {\n        self.showMarker(marker);\n      });\n    }\n  }, {\n    key: \"showMarker\",\n    value: function showMarker(marker) {\n      var self = this;\n      marker.visible = true;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.addLayer(marker);\n      } else {\n        marker.addTo(self.map);\n      }\n    }\n  }, {\n    key: \"hideMarkers\",\n    value: function hideMarkers(markers) {\n      var self = this;\n      markers.forEach(function (marker) {\n        self.hideMarker(marker);\n      });\n    }\n  }, {\n    key: \"hideMarker\",\n    value: function hideMarker(marker) {\n      var self = this;\n      marker.visible = false;\n\n      if (self.markerClusterGroup && !marker.doNotCluster) {\n        self.markerClusterGroup.removeLayer(marker);\n      } else {\n        marker.remove(self.map);\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filterFuntion) {\n      var self = this;\n      self.filterFunction = filterFuntion;\n      self.applyFilter();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter() {\n      var self = this;\n\n      if (self.filterFunction) {\n        self.markers.forEach(function (marker) {\n          if (self.filterFunction(marker)) {\n            self.showMarker(marker);\n          } else {\n            self.hideMarker(marker);\n          }\n        });\n      } else {\n        self.markers.forEach(function (marker) {\n          self.showMarker(marker);\n        });\n      }\n    }\n  }, {\n    key: \"getPointInfo\",\n    value: function getPointInfo(latlng, marker, next) {\n      // TODO: configurabel\n      var bagApiUrl1 = 'https://api.data.amsterdam.nl/bag/nummeraanduiding/?format=json&locatie=[[lat]],[[lng]],50';\n      var bagApiUrl2 = 'https://api.data.amsterdam.nl/bag/nummeraanduiding/[[id]]/?format=json';\n      var self = this;\n      latlng = latlng || {};\n      var url = bagApiUrl1.replace(/\\[\\[lat\\]\\]/, latlng.lat).replace(/\\[\\[lng\\]\\]/, latlng.lng);\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        var id = json && json.results && json.results[0] && json.results[0].landelijk_id;\n        var url = bagApiUrl2.replace(/\\[\\[id\\]\\]/, id);\n        fetch(url).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          json.lat = latlng.lat;\n          json.lng = latlng.lng;\n          if (next) next(json, marker);\n        });\n      })[\"catch\"](function (err) {\n        console.log('Zoek adres: niet goed');\n        console.log(err);\n        if (next) next({}, marker);\n      });\n    }\n  }, {\n    key: \"onMapClick\",\n    value: function onMapClick() {// placeholder\n    }\n  }, {\n    key: \"onMarkerClick\",\n    value: function onMarkerClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterClick\",\n    value: function onClusterClick() {// placeholder\n    }\n  }, {\n    key: \"onClusterAnimationEnd\",\n    value: function onClusterAnimationEnd() {// placeholder\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId,\n        className: this.props.className || 'openstad-component-nlmap',\n        ref: function ref(el) {\n          return _this2.instance = el;\n        }\n      }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n        id: this.divId + '-map'\n      }));\n    }\n  }]);\n\n  return OpenStadComponentNLMap;\n}(openstad_component_src_index_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/map.jsx\n");

/***/ }),

/***/ "./src/css/index.less":
/*!****************************!*\
  !*** ./src/css/index.less ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2luZGV4Lmxlc3M/Y2RmNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL3NyYy9jc3MvaW5kZXgubGVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/css/index.less\n");

/***/ }),

/***/ "./src/index.jsx":
/*!***********************!*\
  !*** ./src/index.jsx ***!
  \***********************/
/*! exports provided: OpenStadComponentNLMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_index_less__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/index.less */ \"./src/css/index.less\");\n/* harmony import */ var _css_index_less__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_index_less__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _component_map_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component/map.jsx */ \"./src/component/map.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OpenStadComponentNLMap\", function() { return _component_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n\n\n\n\n\nwindow.addEventListener(\"load\", function () {\n  var elements = document.querySelectorAll('.openstad-component-nlmap');\n  elements.forEach(function (elem) {\n    var attributes = elem.attributes;\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default.a.render(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_component_map_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      attributes: attributes\n    }), elem);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanN4P2VkMTIiXSwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsZW0iLCJhdHRyaWJ1dGVzIiwiUmVhY3RET00iLCJyZW5kZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBQSxNQUFNLENBQUNDLGdCQUFQLENBQXdCLE1BQXhCLEVBQWdDLFlBQVc7QUFDMUMsTUFBSUMsUUFBUSxHQUFHQyxRQUFRLENBQUNDLGdCQUFULENBQTBCLDJCQUExQixDQUFmO0FBQ0FGLFVBQVEsQ0FBQ0csT0FBVCxDQUFpQixVQUFDQyxJQUFELEVBQVU7QUFDeEIsUUFBSUMsVUFBVSxHQUFHRCxJQUFJLENBQUNDLFVBQXRCO0FBQ0ZDLG9EQUFRLENBQUNDLE1BQVQsQ0FBaUIsMkRBQUMsMERBQUQ7QUFBd0IsZ0JBQVUsRUFBRUY7QUFBcEMsTUFBakIsRUFBb0VELElBQXBFO0FBQ0EsR0FIRDtBQUlBLENBTkQiLCJmaWxlIjoiLi9zcmMvaW5kZXguanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG5pbXBvcnQgXCIuL2Nzcy9pbmRleC5sZXNzXCI7XG5cbmltcG9ydCBPcGVuU3RhZENvbXBvbmVudE5MTWFwIGZyb20gJy4vY29tcG9uZW50L21hcC5qc3gnO1xuZXhwb3J0IHtPcGVuU3RhZENvbXBvbmVudE5MTWFwfVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24oKSB7XG5cdGxldCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5vcGVuc3RhZC1jb21wb25lbnQtbmxtYXAnKTtcblx0ZWxlbWVudHMuZm9yRWFjaCgoZWxlbSkgPT4ge1xuICAgIGxldCBhdHRyaWJ1dGVzID0gZWxlbS5hdHRyaWJ1dGVzO1xuXHRcdFJlYWN0RE9NLnJlbmRlciggPE9wZW5TdGFkQ29tcG9uZW50TkxNYXAgYXR0cmlidXRlcz17YXR0cmlidXRlc30vPiwgZWxlbSlcblx0fSlcbn0pXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.jsx\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = React;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdFwiP2M0ODEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFJlYWN0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ReactDOM;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJSZWFjdERPTVwiPzRiMmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoicmVhY3QtZG9tLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBSZWFjdERPTTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///react-dom\n");

/***/ })

/******/ });